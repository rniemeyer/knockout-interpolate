// knockout-interpolate 0.1.1 | (c) 2015 Ryan Niemeyer |  http://www.opensource.org/licenses/mit-license
!function(n){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?n(require("knockout")):"function"==typeof define&&define.amd?define(["knockout"],n):n(ko)}(function(n){function e(n){return 3===n.nodeType&&n.nodeValue.indexOf("{{")>-1}function i(n){return n.attributes&&n.attributes["data-koset"]}function r(e,i,r){var t=e.replace("{{","").replace("}}","");return n.unwrap(o.parseBindingsString("x:"+t,i,r).x)}function t(e,i){var r=o.parseBindingsString(e.attributes["data-koset"].value,i,e);r.hasOwnProperty("visible")&&!n.unwrap(r.visible)&&(e.style.display="none"),r.hasOwnProperty("if")&&!n.unwrap(r["if"])&&(e.innerHTML=""),r.hasOwnProperty("value")&&(e.value=n.unwrap(r.value))}var o=new n.bindingProvider,u=n.bindingProvider.instance,a=/\{\{.*?}}/g;n.bindingProvider.interpolate={nodeHasBindings:function(n){return e(n)||i(n)||u.nodeHasBindings(n)},getBindingAccessors:function(n,o){return e(n)?void(n.nodeValue=n.nodeValue.replace(a,function(e){return r(e,o,n)})):(i(n)&&t(n,o),u.getBindingAccessors(n,o))}}});